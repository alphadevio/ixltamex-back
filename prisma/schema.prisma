generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id           Int           @id @default(autoincrement())
  name         String?       @db.VarChar(100)
  email        String?       @db.VarChar(100)
  phone_number String?       @db.VarChar(13)
  password     String?       @db.VarChar(100)
  deleted      Int?
  profile_id   Int           @default(2)
  percentages  percentages[]
  profiles     profiles      @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "profile_id")

  @@index([id], map: "ix_users_id")
  @@index([profile_id], map: "profile_id_idx")
}

model profiles {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(20)
  users users[]
}

model developments {
  id          Int           @id @unique(map: "id") @default(autoincrement())
  name        String?       @db.VarChar(100)
  location    String?       @db.VarChar(150)
  lots        Int?
  deleted     Int?          @default(0)
  apples      apples[]
  percentages percentages[]
}

model percentages {
  id             Int           @id @unique(map: "id") @default(autoincrement())
  user_id        Int?
  development_id Int?
  percentage     Decimal?      @db.Decimal(10, 0)
  deleted        Int?          @default(0)
  users          users?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "percentages_ibfk_1")
  developments   developments? @relation(fields: [development_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "percentages_ibfk_2")

  @@index([development_id], map: "development_id")
  @@index([user_id], map: "user_id")
}

model clients {
  id           Int     @id @default(autoincrement())
  name         String? @db.VarChar(100)
  phone_number String? @db.VarChar(13)
  id_file_name String? @db.VarChar(50)
  deleted      Int?    @default(0)
  sales        sales[]
}

model apples {
  id             Int           @id @default(autoincrement())
  name           String        @db.VarChar(100)
  id_development Int?
  deleted        Int?          @default(0)
  developments   developments? @relation(fields: [id_development], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "apples_ibfk_1")
  lots           lots[]

  @@index([id_development], map: "id_development")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model lots {
  id           Int     @id @default(autoincrement())
  id_apple     Int?
  lot_number   Int?
  area         Float
  top_width    Float
  bottom_width Float
  right_length Float
  left_length  Float
  deleted      Int?    @default(0)
  apples       apples? @relation(fields: [id_apple], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "lots_ibfk_1")
  sales        sales?

  @@index([id_apple], map: "id_apple")
}

model sales {
  id               Int        @id @default(autoincrement())
  id_client        Int
  id_lot           Int        @unique(map: "id_lot")
  price            Float?
  paid             Decimal?   @default(0.00) @db.Decimal(10, 2)
  created_at       DateTime?  @default(now()) @db.Timestamp(0)
  modified_at      DateTime?  @default(now()) @db.Timestamp(0)
  deleted          Int        @default(0)
  payment_day      Int?
  payment_weekday  String?    @db.VarChar(10)
  frequency_type   String?    @db.VarChar(15)
  frequency_amount Int?       @default(0)
  payments         payments[]
  clients          clients    @relation(fields: [id_client], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sales_ibfk_1")
  lots             lots       @relation(fields: [id_lot], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sales_ibfk_2")

  @@index([id_client], map: "id_client")
}

model periods {
  id      Int    @id @default(autoincrement())
  name    String @db.VarChar(100)
  days    Int
  deleted Int    @default(0)
}

model payments {
  id           Int      @id @default(autoincrement())
  id_sale      Int?
  amount       Decimal? @db.Decimal(10, 2)
  payment_date Decimal? @db.Decimal(13, 0)
  paid         Int?     @default(0)
  sales        sales?   @relation(fields: [id_sale], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payments_ibfk_1")

  @@index([id_sale], map: "id_sale")
}
